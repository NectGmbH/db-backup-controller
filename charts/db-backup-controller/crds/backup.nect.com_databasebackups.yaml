---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: databasebackups.backup.nect.com
spec:
  group: backup.nect.com
  names:
    kind: DatabaseBackup
    listKind: DatabaseBackupList
    plural: databasebackups
    singular: databasebackup
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DatabaseBackup contains the Kubernetes document for the DatabaseBackupSpec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseBackupSpec describes how the backup of the database
              should look and how to connect to the database
            properties:
              backupCron:
                description: BackupCron specifies a cron entry (5 fields) when to
                  execute the backup runs. If set to other than empty string will
                  override the BackupInterval
                pattern: ((((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*) ?){5})
                type: string
              backupInterval:
                description: 'BackupIntervalHours is a simpler method of specifying
                  the backup schedule: The process will wait for the current time
                  to be divisible by the given interval. (i.e. if you specify 2h the
                  backup will run 00:00, 02:00, 04:00, ...)'
                format: int64
                minimum: 1
                type: integer
              backupStorageClass:
                description: BackupStorageClass defines where to store the backups
                  (must exist before)
                type: string
              cockroach:
                description: Cockroach defines the required values for a Cockroach
                  backup
                properties:
                  cert:
                    description: Cert is the client certificate used to authenticate
                      against CRDB
                    properties:
                      fromSecret:
                        description: FromSecret references a secret to fetch the value
                          from
                        properties:
                          key:
                            description: Key specifies the key within the refereced
                              secret to fetch the value from
                            type: string
                          name:
                            description: Name specifies the name of the secret to
                              fetch the value from. Must exist in the same namespace
                              as the resource
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Value specifies a plain text value for the secret.
                          When filled this will prevent the lookup of the FromSecret
                          reference.
                        type: string
                    type: object
                  certCA:
                    description: TLSCertCA specifies the CA certificate and should
                      be specified as reference to a key in a secret if CA is managed
                      as a secret
                    properties:
                      fromSecret:
                        description: FromSecret references a secret to fetch the value
                          from
                        properties:
                          key:
                            description: Key specifies the key within the refereced
                              secret to fetch the value from
                            type: string
                          name:
                            description: Name specifies the name of the secret to
                              fetch the value from. Must exist in the same namespace
                              as the resource
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Value specifies a plain text value for the secret.
                          When filled this will prevent the lookup of the FromSecret
                          reference.
                        type: string
                    type: object
                  certCAFromCluster:
                    default: false
                    description: CertCAFromCluster specifies the cluster certificate
                      should be used instead of the certCA provided certificate. If
                      this is set to true the certCA key will be ignored.
                    type: boolean
                  certKey:
                    description: CertKey is the private key for the given client certificate
                    properties:
                      fromSecret:
                        description: FromSecret references a secret to fetch the value
                          from
                        properties:
                          key:
                            description: Key specifies the key within the refereced
                              secret to fetch the value from
                            type: string
                          name:
                            description: Name specifies the name of the secret to
                              fetch the value from. Must exist in the same namespace
                              as the resource
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Value specifies a plain text value for the secret.
                          When filled this will prevent the lookup of the FromSecret
                          reference.
                        type: string
                    type: object
                  database:
                    description: Database specifies the database to be backed up
                    type: string
                  host:
                    description: Host specifies the IP or DNS name to connect to
                    type: string
                  port:
                    description: Port specifies the port the database is listening
                      on (usually 3306)
                    format: int64
                    type: integer
                  user:
                    description: User specifies the user to use for connection
                    type: string
                required:
                - cert
                - certKey
                - database
                - host
                - port
                - user
                type: object
              databaseType:
                description: DatabaseType specifies the type of the database to be
                  backed up. This changes the behaviour of the backup engine used
                  in the background and needs to match the provisioned database.
                enum:
                - cockroach
                - mysql
                - postgres
                type: string
              databaseVersion:
                description: DatabaseVersion is an arbitrary string the database driver
                  uses to determine how to handle the exact version of the database.
                  This for example is used to handle the different approaches used
                  by Cockroach v21 and v23.
                type: string
              mysql:
                description: MySQL defines the required values for a MySQL backup
                properties:
                  database:
                    description: Database specifies the database to be backed up
                    type: string
                  host:
                    description: Host specifies the IP or DNS name to connect to
                    type: string
                  pass:
                    description: Pass specifies a reference to or the value of the
                      users password
                    properties:
                      fromSecret:
                        description: FromSecret references a secret to fetch the value
                          from
                        properties:
                          key:
                            description: Key specifies the key within the refereced
                              secret to fetch the value from
                            type: string
                          name:
                            description: Name specifies the name of the secret to
                              fetch the value from. Must exist in the same namespace
                              as the resource
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Value specifies a plain text value for the secret.
                          When filled this will prevent the lookup of the FromSecret
                          reference.
                        type: string
                    type: object
                  port:
                    description: Port specifies the port the database is listening
                      on (usually 3306)
                    format: int64
                    type: integer
                  user:
                    description: User specifies the user or a reference to it to use
                      for connection
                    properties:
                      fromSecret:
                        description: FromSecret references a secret to fetch the value
                          from
                        properties:
                          key:
                            description: Key specifies the key within the refereced
                              secret to fetch the value from
                            type: string
                          name:
                            description: Name specifies the name of the secret to
                              fetch the value from. Must exist in the same namespace
                              as the resource
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Value specifies a plain text value for the secret.
                          When filled this will prevent the lookup of the FromSecret
                          reference.
                        type: string
                    type: object
                required:
                - database
                - host
                - pass
                - port
                - user
                type: object
              postgres:
                description: Postgres defines the required values for a PostgreSQL
                  backup
                properties:
                  database:
                    description: Database specifies the database to be backed up
                    type: string
                  dsnParameters:
                    additionalProperties:
                      type: string
                    description: DSNParameters is an optional map[string]string to
                      define further parameters for the DSN like `sslmode`, `connect_timeout`,
                      etc. The `user`, `host`, `port`, `dbname`, `pass` parameters
                      are NOT settable through this and are overwritten unconditionally.
                    type: object
                  host:
                    description: Host specifies the IP or DNS name to connect to
                    type: string
                  pass:
                    description: Pass specifies a reference to or the value of the
                      users password
                    properties:
                      fromSecret:
                        description: FromSecret references a secret to fetch the value
                          from
                        properties:
                          key:
                            description: Key specifies the key within the refereced
                              secret to fetch the value from
                            type: string
                          name:
                            description: Name specifies the name of the secret to
                              fetch the value from. Must exist in the same namespace
                              as the resource
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Value specifies a plain text value for the secret.
                          When filled this will prevent the lookup of the FromSecret
                          reference.
                        type: string
                    type: object
                  port:
                    description: Port specifies the port the database is listening
                      on (usually 3306)
                    format: int64
                    type: integer
                  user:
                    description: User specifies the user or a reference to it to use
                      for connection
                    type: string
                required:
                - database
                - dsnParameters
                - host
                - pass
                - port
                - user
                type: object
              retentionConfig:
                additionalProperties:
                  description: A Duration represents the elapsed time between two
                    instants as an int64 nanosecond count. The representation limits
                    the largest representable duration to approximately 290 years.
                  format: int64
                  type: integer
                description: RetentionConfig defines the retention rules applied to
                  store old copies of the backup in case generation-principle backups
                  are enabled. If left to nil the default retention config is used
                type: object
              useSingleBackupTarget:
                default: false
                description: UseSingleBackupTarget defines whether to upload in the
                  same place all the time (S3 server then needs to take care of rotating
                  / revisioning backup file and backup can only restore this single
                  instance, not to a point in time) or whether to use generation principle
                  backups and treat the storage target as a prefix.
                type: boolean
            required:
            - backupStorageClass
            - databaseType
            type: object
          status:
            description: DatabaseBackupStatus represents a status of a DatabaseBackup
              resource
            properties:
              conditions:
                description: Collection of conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hash:
                description: Last applied hash of the created resources for comparison
                  of a generated update
                type: string
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
